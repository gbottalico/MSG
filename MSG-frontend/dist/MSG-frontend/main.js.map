{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data/backend_url.ts","webpack:///./src/app/data/datepicker_IT.ts","webpack:///./src/app/data/document_types.ts","webpack:///./src/app/data/ngb-date-it-parser-formatter.ts","webpack:///./src/app/datepicker.service.ts","webpack:///./src/app/datepicker/datepicker.component.css","webpack:///./src/app/datepicker/datepicker.component.html","webpack:///./src/app/datepicker/datepicker.component.ts","webpack:///./src/app/edit-visit/edit-visit.component.css","webpack:///./src/app/edit-visit/edit-visit.component.html","webpack:///./src/app/edit-visit/edit-visit.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/model/visit.ts","webpack:///./src/app/new-visit/new-visit.component.css","webpack:///./src/app/new-visit/new-visit.component.html","webpack:///./src/app/new-visit/new-visit.component.ts","webpack:///./src/app/place.service.ts","webpack:///./src/app/visit-event.service.ts","webpack:///./src/app/visit.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }                 from '@angular/core';\nimport { RouterModule, Routes }     from '@angular/router';\n\nimport { DatepickerComponent }      from './datepicker/datepicker.component';\nimport { DashboardComponent }      from './dashboard/dashboard.component';\nimport { NewVisitComponent }      from './new-visit/new-visit.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'datepicker', component: DatepickerComponent},\n  { path: 'dashboard', component: DashboardComponent},\n  { path: 'new-visit', component: NewVisitComponent}\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ]\n})\n\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-header></app-header>\\n  <div class=\\\"row content\\\">\\n    <div class=\\\"col-sm-2 sidenav\\\">\\n      <app-datepicker></app-datepicker>\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MSG';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule, Input, LOCALE_ID } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NewVisitComponent } from './new-visit/new-visit.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { EditVisitComponent } from './edit-visit/edit-visit.component';\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    DatepickerComponent,\n    DashboardComponent,\n    NewVisitComponent,\n    EditVisitComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule.forRoot()\n  ],\n  providers: [CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".table {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row d-flex\\\">\\n  <div class=\\\"col-sm-9\\\">\\n    <div class=\\\"input-group\\\">\\n      <input #searchBox type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cerca nome..\\\" (keyup)=\\\"search(searchBox.value)\\\" style=\\\"height: 40px\\\">\\n      <app-new-visit></app-new-visit>\\n      <button class=\\\"plus-button btn btn-sm btn-outline-warning mr-2\\\" (click)=\\\"refresh()\\\" style=\\\"width: 40px;height: 40px;\\\"><span class=\\\"glyphicon glyphicon-refresh\\\"></span> </button>\\n    </div>\\n  </div>\\n</div>\\n<table id=\\\"table\\\" class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Luogo</th>\\n      <th scope=\\\"col\\\">Badge</th>\\n      <th scope=\\\"col\\\">Ospite</th>\\n      <th scope=\\\"col\\\">Ospitante</th>\\n      <th scope=\\\"col\\\">Ragione</th>\\n      <th scope=\\\"col\\\">Data</th>\\n      <th scope=\\\"col\\\">Orario Entrata</th>\\n      <th scope=\\\"col\\\">Orario Uscita</th>\\n      <th>\\n        <div class=\\\"dropdown\\\">\\n          <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            {{placeLabel}}\\n          </button>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\" >\\n            <button *ngFor=\\\"let place of places\\\" class=\\\"dropdown-item\\\" (click)=\\\"setCurrentPlace(place)\\\">{{place.name}}</button>\\n          </div>\\n        </div>\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let visit of visits; let i=index\\\">\\n    <tr>\\n      <th scope=\\\"row\\\">{{i + 1}}</th>\\n      <td>{{visit.place.name}}</td>\\n      <td>{{visit.badgeNo}}</td>\\n      <td>{{visit.guestName}}</td>\\n      <td>{{visit.hostName}}</td>\\n      <td>{{visit.socialReason}}</td>\\n      <td>{{visit.entranceDate}}</td>\\n      <td>{{visit.entranceTime}}</td>\\n      <td>{{visit.leavingTime}}</td>\\n      <td>\\n        <button (click)=\\\"setVisitForm(visit)\\\" class=\\\"btn btn-sm btn-outline-primary mr-2\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span></button>\\n        <button (click)=\\\"editVisit(visit)\\\" class=\\\"btn btn-sm btn-outline-warning mr-2\\\"><span class=\\\"glyphicon glyphicon-pencil\\\"></span></button>\\n        <button [disabled]=\\\"disableDelete\\\"  (click)=\\\"deleteVisit(visit)\\\" class=\\\"btn btn-sm btn-outline-danger mr-2\\\"><span class=\\\"glyphicon glyphicon-trash\\\"></span></button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<app-edit-visit></app-edit-visit>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, Subject, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\nimport { Visit } from '../model/visit';\nimport { Place } from '../model/place';\nimport { VisitService } from '../visit.service';\nimport { PlaceService } from '../place.service';\nimport { DatepickerService } from '../datepicker.service';\nimport { VisitEventService } from '../visit-event.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  disableDelete:boolean;\n  places: Place[] = []\n  currentPlace: Place;\n  placeLabel:string;\n  allVisits: Visit[] = [];\n  visits: Visit[] = [];\n  date: Date = new Date();\n\n  constructor(\n    public visitEventService: VisitEventService,\n    private visitService: VisitService,\n    private placeService: PlaceService,\n    private datepickerService: DatepickerService,\n    private datePipe: DatePipe\n  ) { }\n\n  ngOnInit() {\n    this.disableDelete=false;\n    this.placeLabel=\"Selezionare Luogo\";\n    this.getAllPlaces();\n    this.placeService.getStoredCurrentPlace().subscribe(place=>{\n      this.setCurrentPlace(place);\n    });\n\n    this.datepickerService.change.subscribe(date => {\n      this.date = date;\n      this.getVisitsFromDate()\n    });\n\n    this.visitEventService.newVisitCreatedEvent.subscribe(visit=>{\n      if(visit.entranceDate === this.datePipe.transform(this.date, 'dd-MM-yyyy')){\n        this.visits.push(visit);\n      }\n    });\n  }\n  setVisitForm(visit:Visit):void {\n    this.visitEventService.showNewForm();\n    this.visitEventService.setNewModel(visit);\n  }\n  showVisitForm():void {\n    this.visitEventService.showNewForm();\n  }\n  search(term: string):void {\n    this.visits = this.allVisits\n      .filter(visit =>\n        visit.hostName.toLowerCase().search(term.toLowerCase())!=-1 ||\n        visit.guestName.toLowerCase().search(term.toLowerCase())!=-1\n      );\n  }\n  getVisitsFromDate():void {\n    if(this.date==null){\n      this.date = new Date();\n    }\n    if(this.currentPlace!=null){\n      this.visitService.getVisitsByDate(this.currentPlace.id,this.date)\n        .subscribe( visits => {\n          this.visits = this.allVisits = visits;\n        });\n    }\n  }\n  setCurrentPlace(place: Place){\n    this.currentPlace = place;\n    this.placeLabel = place.name;\n    this.getVisitsFromDate();\n    this.placeService.setCurrentPlace(this.currentPlace);\n  }\n  getAllPlaces():void {\n    this.placeService.getPlaces().subscribe( places => this.places = places);\n  }\n  editVisit(visit: Visit):void {\n    this.visitEventService.setEditModel(visit);\n    this.visitEventService.showEditForm();\n  }\n\n  deleteVisit(visit: Visit):void {\n    this.visitService.deleteVisit(visit).subscribe(\n        result=>{\n          this.visits.splice(this.visits.indexOf(visit), this.currentPlace.id);\n        },\n        error => {\n          this.visits.splice(this.visits.indexOf(visit), this.currentPlace.id);\n          console.log(error);\n        },\n        () => {\n          this.disableDelete=false;\n        }\n     );\n  }\n  refresh():void{\n    this.getVisitsFromDate();\n  }\n}\n","export const BACKEND_URL = 'http://localhost:8080';\r\n","import { Component, Injectable, OnInit } from '@angular/core';\r\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nconst I18N_VALUES = {\r\n  'it': {\r\n    weekdays: ['lun', 'mar', 'mer', 'gio', 'ven', 'sab', 'dom'],\r\n    months: ['gen', 'feb', 'mar', 'apr', 'mag', 'giu', 'lug', 'ago', 'set', 'ott', 'nov', 'dic'],\r\n  }\r\n  // other languages you would support\r\n};\r\n\r\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\r\n// use the Angular LOCALE_ID value\r\n@Injectable()\r\nexport class I18n {\r\n  language = 'it';\r\n}\r\n\r\n// Define custom service providing the months and weekdays translations\r\n@Injectable()\r\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\r\n\r\n  constructor(private _i18n: I18n) {\r\n    super();\r\n  }\r\n\r\n  getWeekdayShortName(weekday: number): string {\r\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\r\n  }\r\n  getMonthShortName(month: number): string {\r\n    return I18N_VALUES[this._i18n.language].months[month - 1];\r\n  }\r\n  getMonthFullName(month: number): string {\r\n    return this.getMonthShortName(month);\r\n  }\r\n\r\n  getDayAriaLabel(date: NgbDateStruct): string {\r\n    return `${date.day}-${date.month}-${date.year}`;\r\n  }\r\n}\r\n","export const DOCUMENT_TYPES: string[] = [ \"Patente\", \"Passaporto\", \"Carta D'Identità\" ];\r\n","import { Injectable } from \"@angular/core\";\r\nimport { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class NgbDateITParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('-');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[1]), day: toInteger(dateParts[0])};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\";\r\n        if(date) {\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + \"-\" : \"\";\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + \"-\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\r\n","import { Injectable, EventEmitter, Output } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatepickerService {\n\n  constructor() { }\n\n  private date: Date = new Date();\n\n  @Output() change: EventEmitter<Date> = new EventEmitter();\n\n  bind(date:Date) {\n    this.date = date;\n    this.change.emit(this.date);\n  }\n\n  getCurrentDate():Date{\n    return this.date;\n  }\n}\n","module.exports = \"\\r\\n\"","module.exports = \"<ngb-datepicker #dp [(ngModel)]=\\\"model\\\" (click)=\\\"bindDate()\\\"></ngb-datepicker>\\n\"","import { Component, Injectable, OnInit } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateITParserFormatter } from \"../data/ngb-date-it-parser-formatter\"\n\nimport { I18n, CustomDatepickerI18n } from '../data/datepicker_IT';\nimport { DatepickerService } from '../datepicker.service';\n\n\nconst now = new Date();\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.css'],\n  providers: [\n              I18n,\n              { provide: NgbDateParserFormatter, useClass: NgbDateITParserFormatter },\n              { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }\n            ] // define custom NgbDatepickerI18n provider\n})\n\nexport class DatepickerComponent implements OnInit{\n  model: NgbDateStruct;\n  date: Date;\n\n  constructor(private datepickerService : DatepickerService) { }\n\n  ngOnInit(){\n    this.selectToday();\n  }\n\n  selectToday() {\n    this.model = {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()};\n    this.bindDate();\n  }\n\n  bindDate(){\n    this.date = new Date(this.model.year, this.model.month-1, this.model.day);\n    this.datepickerService.bind(this.date);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <button class=\\\"plus-button btn btn-sm btn-outline-success mr-2\\\" ><span class=\\\"glyphicon glyphicon-plus\\\"></span> </button> -->\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Modifica Visita</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form #visitForm=\\\"ngForm\\\">\\n      <div [hidden]=\\\"visitForm.submitted\\\">\\n        <div class=\\\"cross-validation\\\" [class.cross-validation-error]=\\\"visitForm.errors?.identityRevealed && (visitForm.touched || visitForm.dirty)\\\">\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"badgeNo\\\" name=\\\"badgeNo\\\" class=\\\"form-control\\\"\\n                   [disabled]=\\\"isBadgeAssigned || isLeavingTimeAssigned\\\"\\n                   required [(ngModel)]=\\\"visit.badgeNo\\\" #badgeNo=\\\"ngModel\\\"\\n                   placeholder=\\\"Numero Badge..\\\">\\n            <div *ngIf=\\\"badgeNo.invalid\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"badgeNo.errors.required\\\">Numero badge obbligatorio</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <form class=\\\"form-inline\\\">\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"Data entrata..\\\"\\n                       [disabled]=\\\"visit.entranceDate || isLeavingTimeAssigned\\\"\\n                       name=\\\"dp\\\" [(ngModel)]=\\\"entranceDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\"\\n                       (click)=\\\"assignEntranceDate()\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                    <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n                  </button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"guestName\\\" name=\\\"guestName\\\" class=\\\"form-control\\\"\\n                   [disabled]=\\\"isGuestNameAssigned || isLeavingTimeAssigned\\\"\\n                   required appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.guestName\\\" #guestName=\\\"ngModel\\\"\\n                   placeholder=\\\"Nome ospite..\\\">\\n\\n            <div *ngIf=\\\"guestName.invalid\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"guestName.errors.required\\\">Nome ospite obbligatorio</div>\\n              <div *ngIf=\\\"guestName.errors.forbidden\\\">Un nome non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"hostName\\\" name=\\\"hostName\\\" class=\\\"form-control\\\"\\n                   [disabled]=\\\"isHostNameAssigned || isLeavingTimeAssigned\\\"\\n                   required appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.hostName\\\" #hostName=\\\"ngModel\\\"\\n                   placeholder=\\\"Nome persona visitata..\\\">\\n\\n            <div *ngIf=\\\"hostName.invalid\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"hostName.errors.required\\\">Nome persona visitata obbligatorio</div>\\n              <div *ngIf=\\\"hostName.errors.forbidden\\\">Un nome non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"socialReason\\\" name=\\\"socialReason\\\" class=\\\"form-control\\\"\\n                   [disabled]=\\\"isLeavingTimeAssigned\\\"\\n                   appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.socialReason\\\" #socialReason=\\\"ngModel\\\"\\n                   placeholder=\\\"Ragione sociale..\\\">\\n\\n            <div *ngIf=\\\"socialReason.invalid\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"socialReason.errors.required\\\">Ragione sociale obbligatora</div>\\n              <div *ngIf=\\\"socialReason.errors.forbidden\\\">Non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                <input id=\\\"entranceTime\\\" name=\\\"entranceTime\\\" class=\\\"form-control\\\"\\n                       [disabled]=\\\"isEntranceTimeAssigned || isLeavingTimeAssigned\\\"\\n                       pattern=\\\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\\\"\\n                       [(ngModel)]=\\\"visit.entranceTime\\\" #entranceTime=\\\"ngModel\\\"\\n                       placeholder=\\\"Orario entrata..\\\">\\n                <div *ngIf=\\\"entranceTime.invalid\\\" class=\\\"alert alert-danger\\\">\\n                 <div *ngIf=\\\"entranceTime.errors.pattern\\\">L'orario deve essere nel formato HH:MM</div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                <input id=\\\"leavingTime\\\" name=\\\"leavingTime\\\" class=\\\"form-control\\\"\\n                       [disabled]=\\\"isLeavingTimeAssigned\\\"\\n                       pattern=\\\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\\\"\\n                       [(ngModel)]=\\\"visit.leavingTime\\\" #leavingTime=\\\"ngModel\\\"\\n                       placeholder=\\\"Orario uscita..\\\">\\n                <div *ngIf=\\\"leavingTime.invalid || (visit.entranceDate>visit.leavingDate)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"leavingTime.errors.pattern\\\">L'orario deve essere nel formato HH:MM</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                <div class=\\\"dropdown\\\">\\n                  <button class=\\\"btn btn-primary dropdown-toggle form-control\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\n                          [disabled]=\\\"isLeavingTimeAssigned\\\"\\n                          data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    {{documentLabel}}\\n                  </button>\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\" >\\n                    <a *ngFor=\\\"let d of documentTypes\\\" class=\\\"dropdown-item\\\"\\n                            (click)=\\\"setDocumentType(d)\\\">{{d}}</a>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                <input *ngIf=\\\"visit.guestDocumentType\\\" id=\\\"guestDocumentNo\\\" name=\\\"guestDocumentNo\\\" class=\\\"form-control\\\"\\n                       [disabled]=\\\"isLeavingTimeAssigned\\\"\\n                       [(ngModel)]=\\\"visit.guestDocumentNo\\\" #guestDocumentNo=\\\"ngModel\\\"\\n                       placeholder=\\\"Numero documento..\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"plus-button btn btn-sm btn-outline-primary mr-2\\\"\\n                  (click)=\\\"editVisit()\\\" [disabled]=\\\"visitForm.invalid\\\">Applica Modifiche</button>\\n        </div>\\n      </div>\\n      <div class=\\\"submitted-message\\\" *ngIf=\\\"visitForm.submitted\\\">\\n        <p>Visita modificata con successo</p>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateITParserFormatter } from \"../data/ngb-date-it-parser-formatter\"\n\nimport { I18n, CustomDatepickerI18n } from '../data/datepicker_IT';\nimport { VisitEventService } from '../visit-event.service';\nimport { VisitService } from '../visit.service';\nimport { PlaceService } from '../place.service';\nimport { Visit } from '../model/visit';\nimport { DOCUMENT_TYPES } from '../data/document_types';\n\nconst now = new Date();\n\n@Component({\n  selector: 'app-edit-visit',\n  templateUrl: './edit-visit.component.html',\n  styleUrls: ['./edit-visit.component.css'],\n  providers: [\n              I18n,\n              { provide: NgbDateParserFormatter, useClass: NgbDateITParserFormatter },\n              { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }\n            ]\n})\nexport class EditVisitComponent implements OnInit {\n  public isEntranceTimeAssigned:boolean;\n  public isHostNameAssigned:boolean;\n  public isGuestNameAssigned:boolean;\n  public isBadgeAssigned:boolean;\n  public isEntranceDateAssigned:boolean;\n  public isLeavingTimeAssigned:boolean;\n\n  public mr: NgbModalRef;\n  private showLeavingDate:boolean = false;\n  private entranceDate:NgbDateStruct;\n  private leavingDate:NgbDateStruct;\n  private documentTypes = DOCUMENT_TYPES;\n  private documentLabel = 'Tipo Documento';\n  private visit:Visit;\n  private closeResult: string;\n\n  @ViewChild('content') private content;\n\n  constructor(\n    private visitEventService: VisitEventService,\n    private visitService: VisitService,\n    private placeService: PlaceService,\n    private formatter: NgbDateParserFormatter,\n    private modalService: NgbModal\n  ) { }\n\n  public ngOnInit() {\n    this.visit = new Visit();\n    this.resetDates();\n    this.visitEventService.showEditFormEvent.subscribe(show => {\n      this.open(this.content);\n    });\n\n    this.visitEventService.editVisitChangedEvent.subscribe(visit => {\n      this.visit = visit;\n      this.showLeavingDate=false;\n      if(visit.guestDocumentType!='' && visit.guestDocumentType!=null){\n        this.documentLabel = visit.guestDocumentType;\n      }\n    });\n  }\n  public open(content) {\n    this.isBadgeAssigned = this.visit.badgeNo!=null;\n    this.isEntranceDateAssigned=this.visit.entranceDate!=null;\n    this.isLeavingTimeAssigned=this.visit.leavingTime!=null;\n    this.isEntranceTimeAssigned=this.visit.entranceTime!=null;\n    this.isHostNameAssigned=this.visit.hostName!=null;\n    this.isGuestNameAssigned=this.visit.guestName!=null;\n\n    this.mr = this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});\n  }\n  public close(){\n    this.mr.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n  public resetVisit():void {\n    this.visit.id = 0;\n    this.visit.badgeNo = null;\n    this.visit.entranceTime = null;\n    this.visit.leavingTime = null;\n    this.assignLeavinDate();\n    this.assignEntranceDate();\n  }\n  public setDocumentType(d:string):void {\n    this.visit.guestDocumentType = d;\n    this.documentLabel = d;\n  }\n\n  public reset():void {\n    this.documentLabel='Tipo Documento';\n    this.visit = new Visit();\n    this.resetDates();\n  }\n  public resetDates():void {\n    this.leavingDate = {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()};\n    this.entranceDate = {year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate()};\n    this.assignLeavinDate();\n    this.assignEntranceDate();\n  }\n  public toggleLeavingDate():void {\n    this.showLeavingDate = !this.showLeavingDate;\n    this.assignLeavinDate();\n  }\n  public assignLeavinDate():void{\n    this.visit.leavingDate = this.formatter.format(this.leavingDate);\n  }\n  public assignEntranceDate():void{\n    this.visit.entranceDate = this.formatter.format(this.entranceDate);\n  }\n  public editVisit():void {\n    this.visit.place = this.placeService.getCurrentPlace();\n    this.visit.entranceDate = this.formatter.format(this.entranceDate);\n    this.visit.leavingDate = this.formatter.format(this.leavingDate);\n    this.visitService.updateVisit(this.visit).subscribe();\n  }\n}\n","module.exports = \".navbar {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"navbar navbar-fixed-bottom bg-primary text-white\\\">\\r\\n  <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\r\\n    <a class=\\\"text-white\\\" href=\\\"https://www.fincons.com/\\\"> Fincons.com</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light text-white\\\">\\n  <a href=\\\"\\\"><img src=\\\"https://image.ibb.co/eGoZwo/logo_msa.jpg\\\" alt=\\\"logo msa\\\" border=\\\"0\\\" class=\\\"img-rounded\\\" width=\\\"50%\\\" height=\\\"50%\\\" /></a>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public title:string = \"MSG\";\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Place } from './place';\r\n\r\nexport class Visit {\r\n  public id: number;\r\n  public badgeNo: string;\r\n  public hostName: string;\r\n  public guestName: string;\r\n  public guestDocumentType: string;\r\n  public guestDocumentNo: string;\r\n  public entranceDate: string;\r\n  public leavingDate: string;\r\n  public entranceTime: string;\r\n  public leavingTime: string;\r\n  public socialReason: string;\r\n  public place: Place;\r\n};\r\n","module.exports = \"\"","module.exports = \"<button class=\\\"plus-button btn btn-sm btn-outline-success mr-2\\\" (click)=\\\"open(content)\\\" style=\\\"width: 40px;height: 40px;\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> </button>\\n\\n<ng-template #content>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Crea Visita</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form #visitForm=\\\"ngForm\\\">\\n      <div [hidden]=\\\"visitForm.submitted\\\">\\n        <div class=\\\"cross-validation\\\" [class.cross-validation-error]=\\\"visitForm.errors?.identityRevealed && (visitForm.touched || visitForm.dirty)\\\">\\n          <div class=\\\"form-group\\\">\\n            <form class=\\\"form-inline\\\">\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control\\\" placeholder=\\\"Data entrata..\\\"\\n                       name=\\\"dp\\\" [(ngModel)]=\\\"entranceDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\"\\n                       (ngModelChange)=\\\"assignEntranceDate()\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                    <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n                  </button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"guestName\\\" name=\\\"guestName\\\" class=\\\"form-control\\\"\\n                   required appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.guestName\\\" #guestName=\\\"ngModel\\\"\\n                   placeholder=\\\"Nome ospite..\\\">\\n\\n            <div *ngIf=\\\"guestName.invalid && (guestName.dirty || guestName.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"guestName.errors.required\\\">Nome ospite obbligatorio</div>\\n              <div *ngIf=\\\"guestName.errors.forbidden\\\">Un nome non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"hostName\\\" name=\\\"hostName\\\" class=\\\"form-control\\\"\\n                   required appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.hostName\\\" #hostName=\\\"ngModel\\\"\\n                   placeholder=\\\"Nome persona visitata..\\\">\\n\\n            <div *ngIf=\\\"hostName.invalid && (hostName.dirty || hostName.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"hostName.errors.required\\\">Nome persona visitata obbligatorio</div>\\n              <div *ngIf=\\\"hostName.errors.forbidden\\\">Un nome non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input id=\\\"socialReason\\\" name=\\\"socialReason\\\" class=\\\"form-control\\\"\\n                   appForbidden=\\\".*[-\\\\/\\\\\\\\^%$*+£?&.()|[\\\\]{}].*\\\"\\n                   [(ngModel)]=\\\"visit.socialReason\\\" #socialReason=\\\"ngModel\\\"\\n                   placeholder=\\\"Ragione sociale..\\\">\\n\\n            <div *ngIf=\\\"socialReason.invalid && (socialReason.dirty || socialReason.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"socialReason.errors.required\\\">Ragione sociale obbligatora</div>\\n              <div *ngIf=\\\"socialReason.errors.forbidden\\\">Non può contenere caratteri speciali</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                <div class=\\\"dropdown\\\">\\n                  <button class=\\\"btn btn-primary dropdown-toggle form-control\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\n                          data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    {{documentLabel}}\\n                  </button>\\n                  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\" >\\n                    <a *ngFor=\\\"let d of documentTypes\\\" class=\\\"dropdown-item\\\"\\n                            (click)=\\\"setDocumentType(d)\\\">{{d}}</a>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                <input *ngIf=\\\"visit.guestDocumentType\\\" id=\\\"guestDocumentNo\\\" name=\\\"guestDocumentNo\\\" class=\\\"form-control\\\"\\n                       [(ngModel)]=\\\"visit.guestDocumentNo\\\" #guestDocumentNo=\\\"ngModel\\\"\\n                       placeholder=\\\"Numero documento..\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm\\\">\\n                <div class=\\\"form-check\\\">\\n                  <input id=\\\"exampleCheck1\\\" type=\\\"checkbox\\\" class=\\\"form-check-input\\\"\\n                         (click)=\\\"toggleLeavingDate()\\\">\\n                  <label class=\\\"form-check-label\\\">Aggiungi data di uscita</label>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm\\\">\\n                <div class=\\\"form-group\\\" *ngIf=\\\"showLeavingDate\\\" >\\n                  <form class=\\\"form-inline\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input class=\\\"form-control\\\" placeholder=\\\"Data uscita..\\\"\\n                             name=\\\"dp\\\" [(ngModel)]=\\\"leavingDate\\\"\\n                             (ngModelChange)=\\\"assignLeavinDate()\\\"  ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n\\n                      <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\n                          <span class=\\\"glyphicon glyphicon-calendar\\\"></span>\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </form>\\n                  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"comparableEntranceDate>comparableLeavingDate\\\">\\n                    La data di entrata non può essere minore alla data di uscita\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"plus-button btn btn-sm btn-outline-primary mr-2\\\" (click)=\\\"addVisit()\\\" [disabled]=\\\"visitForm.invalid || (showLeavingDate && comparableEntranceDate>comparableLeavingDate)\\\">Crea</button>\\n        </div>\\n      </div>\\n      <div class=\\\"submitted-message\\\" *ngIf=\\\"visitForm.submitted\\\">\\n        <p>Visita aggiunta con successo</p>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModal, ModalDismissReasons, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateITParserFormatter } from \"../data/ngb-date-it-parser-formatter\"\n\nimport { I18n, CustomDatepickerI18n } from '../data/datepicker_IT';\nimport { VisitEventService } from '../visit-event.service';\nimport { VisitService } from '../visit.service';\nimport { PlaceService } from '../place.service';\nimport { DatepickerService } from '../datepicker.service';\nimport { Visit } from '../model/visit';\nimport { DOCUMENT_TYPES } from '../data/document_types';\n\n@Component({\n  selector: 'app-new-visit',\n  templateUrl: './new-visit.component.html',\n  styleUrls: ['./new-visit.component.css'],\n  providers: [\n              I18n,\n              { provide: NgbDateParserFormatter, useClass: NgbDateITParserFormatter },\n              { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }\n            ]\n})\nexport class NewVisitComponent implements OnInit {\n  public mr: NgbModalRef;\n  private showLeavingDate:boolean = false;\n  private entranceDate:NgbDateStruct;\n  private leavingDate:NgbDateStruct;\n  private documentTypes = DOCUMENT_TYPES;\n  private documentLabel = 'Tipo Documento';\n  private visit:Visit;\n  private closeResult: string;\n  private currentDate:Date;\n  private comparableLeavingDate:Date;\n  private comparableEntranceDate:Date;\n\n  @ViewChild('content') private content;\n\n  constructor(\n    private visitEventService: VisitEventService,\n    private visitService: VisitService,\n    private placeService: PlaceService,\n    private formatter: NgbDateParserFormatter,\n    private modalService: NgbModal,\n    private datepickerService:DatepickerService\n  ) { }\n\n  public ngOnInit() {\n    this.visit = new Visit();\n    this.resetDates();\n\n    this.visitEventService.showNewFormEvent.subscribe(show => {\n      this.resetVisit();\n      this.openPopulated(this.content);\n    });\n\n    this.visitEventService.newVisitChangedEvent.subscribe(visit => {\n      this.visit.guestName = visit.guestName;\n      this.visit.hostName = visit.hostName;\n      this.visit.guestDocumentType = visit.guestDocumentType;\n      this.visit.guestDocumentNo = visit.guestDocumentNo;\n      this.visit.socialReason = visit.socialReason;\n      this.showLeavingDate=false;\n      if(visit.guestDocumentType!='' && visit.guestDocumentType!=null){\n        this.documentLabel = visit.guestDocumentType;\n      }\n    });\n  }\n  public open(content) {\n    this.reset()\n    this.openPopulated(content);\n  }\n  public openPopulated(content) {\n    this.mr = this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});\n  }\n  public close(){\n    this.mr.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n  public resetVisit():void {\n    this.visit.id = 0;\n    this.visit.badgeNo = null;\n    this.visit.entranceTime = null;\n    this.visit.leavingTime = null;\n    this.assignLeavinDate();\n    this.assignEntranceDate();\n  }\n  public setDocumentType(d:string):void {\n    this.visit.guestDocumentType = d;\n    this.documentLabel = d;\n  }\n  public reset():void {\n    this.documentLabel='Tipo Documento';\n    this.visit = new Visit();\n    this.resetDates();\n  }\n  public resetDates():void {\n    this.leavingDate = {year: this.datepickerService.getCurrentDate().getFullYear(), month: this.datepickerService.getCurrentDate().getMonth() + 1, day: this.datepickerService.getCurrentDate().getDate()};\n    this.entranceDate = {year: this.datepickerService.getCurrentDate().getFullYear(), month: this.datepickerService.getCurrentDate().getMonth() + 1, day: this.datepickerService.getCurrentDate().getDate()};\n    this.assignLeavinDate();\n    this.assignEntranceDate();\n  }\n  public toggleLeavingDate():void {\n    this.showLeavingDate = !this.showLeavingDate;\n    this.assignLeavinDate();\n  }\n  public assignLeavinDate():void{\n    this.comparableLeavingDate = new Date(this.leavingDate.year, this.leavingDate.month - 1, this.leavingDate.day);\n    console.log(this.comparableEntranceDate);\n    console.log(this.comparableLeavingDate);\n    console.log(this.comparableEntranceDate>this.comparableLeavingDate);\n    this.visit.leavingDate = this.formatter.format(this.leavingDate);\n  }\n  public assignEntranceDate():void{\n    this.comparableEntranceDate = new Date(this.entranceDate.year, this.entranceDate.month - 1, this.entranceDate.day);\n    console.log(this.comparableEntranceDate);\n    console.log(this.comparableLeavingDate);\n    console.log(this.comparableEntranceDate>this.comparableLeavingDate);\n    this.visit.entranceDate = this.formatter.format(this.entranceDate);\n\n  }\n  public addVisit():void {\n    this.visit.place = this.placeService.getCurrentPlace();\n    this.visit.entranceDate = this.formatter.format(this.entranceDate);\n    this.visit.leavingDate = this.formatter.format(this.leavingDate);\n    this.visitService.addVisit(this.visit).subscribe();\n    this.visitEventService.visitCreated(this.visit);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { BACKEND_URL } from './data/backend_url';\nimport { Place } from './model/place';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService implements OnInit{\n  private placeUrl = BACKEND_URL+'/api/place';\n  private placesUrl = BACKEND_URL+'/api/places';\n  private currentPlace:Place;\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(){\n  }\n  setCurrentPlace(place: Place):void {\n    this.cookieService.set( 'msg.currentPlace', \"\"+place.id);\n    this.currentPlace = place;\n  }\n  getStoredCurrentPlace():Observable<Place> {\n    return this.getPlace(+this.cookieService.get('msg.currentPlace'));\n  }\n  getCurrentPlace():Place {\n    return this.currentPlace;\n  }\n  getPlaces(): Observable<Place[]> {\n    return this.http.get<Place[]>(this.placesUrl)\n      .pipe(\n        tap(places => this.log(`fetched places`)),\n        catchError(this.handleError<Place[]>('getPlaces', []))\n      );\n  }\n\n  getPlace(id: number): Observable<Place> {\n    const url = `${this.placeUrl}/${id}`;\n    return this.http.get<Place>(url)\n      .pipe(\n        tap(_ => this.log(`fetched place id=${id}`)),\n        catchError(this.handleError<Place>(`getPlace id=${id}`))\n      );\n  }\n\n  updatePlace(place: Place): Observable<any> {\n    return this.http.put(this.placeUrl, place, httpOptions)\n      .pipe(\n        tap(_ => this.log(`updated place id=$=${place.id}`)),\n        catchError(this.handleError<any>('updatePlace'))\n      );\n  }\n\n  addPlace(place: Place): Observable<Place> {\n    return this.http.post<Place>(this.placeUrl, place, httpOptions)\n      .pipe(\n        tap((place: Place) => this.log(`added place w/ id=${place.id}`)),\n        catchError(this.handleError<Place>(`addPlace`))\n      );\n  }\n\n  deletePlace(place: Place | number): Observable<Place> {\n    const id = typeof place === 'number' ? place : place.id;\n    const url = `${this.placeUrl}/${id}`;\n\n    return this.http.delete<Place>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted place id=${id}`)),\n      catchError(this.handleError<Place>('deletePlace'))\n    );\n  }\n\n  private log(message:string): void {\n    console.log('PlaceService:' + message);\n  }\n\n  handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\n\nimport { Visit } from './model/visit'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitEventService {\n  editVisitModel: Visit;\n  newVisitModel: Visit;\n  showForm:boolean;\n\n  @Output() newVisitCreatedEvent: EventEmitter<Visit> = new EventEmitter();\n\n  @Output() showEditFormEvent: EventEmitter<boolean> = new EventEmitter();\n  @Output() showNewFormEvent: EventEmitter<boolean> = new EventEmitter();\n  @Output() newVisitChangedEvent: EventEmitter<Visit> = new EventEmitter();\n  @Output() editVisitChangedEvent: EventEmitter<Visit> = new EventEmitter();\n\n  constructor() { }\n\n  setEditModel(visit:Visit) {\n    this.editVisitModel = visit;\n    this.editVisitChangedEvent.emit(this.editVisitModel);\n  }\n  setNewModel(visit:Visit) {\n    this.newVisitModel = visit;\n    this.newVisitChangedEvent.emit(this.newVisitModel);\n  }\n  showEditForm() {\n    this.showForm = true;\n    this.showEditFormEvent.emit(this.showForm);\n  }\n  showNewForm() {\n    this.showForm = false;\n    this.showNewFormEvent.emit(this.showForm);\n  }\n  visitCreated(visit:Visit) {\n    this.newVisitModel = visit;\n    this.newVisitCreatedEvent.emit(this.newVisitModel);\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { BACKEND_URL } from './data/backend_url';\nimport { Visit } from './model/visit';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitService {\n  private visitUrl = BACKEND_URL+'/api/visit';\n  private visitsUrl = BACKEND_URL+'/api/visits';\n  private visitsByPlaceAndNameUrl = BACKEND_URL+'/api/visit_by_place_and_name';\n  private visitsByPlaceAndDateUrl = BACKEND_URL+'/api/visit_by_place_and_date';\n\n  constructor(\n    private http: HttpClient,\n    private datePipe: DatePipe\n  ) { }\n\n  getVisits(): Observable<Visit[]> {\n    return this.http.get<Visit[]>(this.visitsUrl)\n      .pipe(\n        tap(visits => this.log(`fetched visits`)),\n        catchError(this.handleError<Visit[]>('getVisits', []))\n      );\n  }\n\n  getVisit(id: number): Observable<Visit> {\n    const url = `${this.visitUrl}/${id}`;\n    return this.http.get<Visit>(url)\n      .pipe(\n        tap(_ => this.log(`fetched visit id=${id}`)),\n        catchError(this.handleError<Visit>(`getVisit id=${id}`))\n      );\n  }\n\n  updateVisit (visit: Visit): Observable<any> {\n    return this.http.put(this.visitUrl, visit, httpOptions)\n      .pipe(\n        tap(_ => this.log(`updated visit id=$=${visit.id}`)),\n        catchError(this.handleError<any>('updateVisit'))\n      );\n  }\n\n  addVisit (visit: Visit): Observable<any> {\n    return this.http.post<Visit>(this.visitUrl, visit, httpOptions)\n      .pipe(\n        tap(_ => this.log(`added visit`)),\n        catchError(this.handleError<Visit>(`addVisit`))\n      );\n  }\n\n  deleteVisit (visit: Visit | number): Observable<Visit> {\n    const id = typeof visit === 'number' ? visit : visit.id;\n    const url = `${this.visitUrl}/${id}`;\n\n    return this.http.delete<Visit>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted visit id=${id}`))\n    );\n  }\n\n  getVisitsByDate(placeId:number, date: Date): Observable<Visit[]> {\n    const dateStr = this.datePipe.transform(date, 'yyyy-MM-dd');\n    return this.http.get<Visit[]>(`${this.visitsByPlaceAndDateUrl}?place_id=${placeId}&date=${dateStr}`)\n      .pipe(\n        tap(_ => this.log(`found visits matching \"${date}\" with place id \"${placeId}\"`)),\n        catchError(this.handleError<Visit[]>('searchVisits', []))\n      );\n  }\n\n  getVisitsByName(placeId:number, name: string): Observable<Visit[]> {\n    if (!name.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n    return this.http.get<Visit[]>(`${this.visitsByPlaceAndNameUrl}?place_id=${placeId}&name='${name}'`)\n      .pipe(\n        tap(_ => this.log(`found visits matching \"${name}\" with place id \"${placeId}\"`)),\n        catchError(this.handleError<Visit[]>('searchVisits', []))\n      );\n  }\n\n  private log(message:string): void {\n    console.log('VisitService:' + message);\n  }\n\n  handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}